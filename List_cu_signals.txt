    reg_file_read_1    enable read from out_1 & store in reg a
    reg_file_read_2    same as before for out 2 & reg b
    reg_imm_en         enable immediate register
    imm_sign_ext_en    enable sign extender in decode stage
    branch_en          branch instruction(=1 per both beqz and bnez)
    branch_nez         bnez instruction(=1 per bnez , =0 per beqz, indifferente per tutte le j instructions)
    jump_en            jump instruction(=1 per le j instructions e =0 per branch instructions)
    jr_en              jr/!nojr(=1 per jr e jalr =0 per j e jal)
    jl_en              drives mux between PC and register A that feeds the ALU(=1 data from PC, =0 data from RegA/Forwarding)
    alu_op_sel         select alu op
    alu_pc_sel         select between PC and constant '8' for the ALU(for jal and jalr instr)
    alu_get_imm_in     select between Breg e immediate(=0 per B e =1 per immediate)
    alu_out_reg_en     alu out register enable
    b_bypass_en        enable register that brings data directly from Breg to Data Memory, bypassing ALU
    add_w_pipe_2_en    enable register pipeline degli indirizzi nello stadio di execute
    write_r31_en      mux selector per write addr per register file(mux is physically in decode stage, but driven in wb stage, =0 per dato da IR, =1 per dato da pipeline indirizzi)
    dram_read_en       come da nome
    dram_write_en      come da nome
    dram_write_byte    come da nome
    mask_2_signed      enable per sign extend alla maschera nello stadio di execute
    mask_2_en          selector per la mask in execute(per la size)
    add_w_pipe_3_en    enable register pipeline degli indirizzi nello stadio di memory
    mem_out_sel        selector tra LMDregister(output data memory) e registro che trasporta aluout allo stadio di write back saltando la data memory(=0 per LMD, =1 per l'altro registro). Occhio che lo hai chiamato alu_bypass nel tuo diagramma a blocchi, per√≤ in questo mapping alu_bypass serve a bypassare la ALU come scritto sopra
    reg_file_write     register file write enable
